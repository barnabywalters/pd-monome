#N canvas 386 180 763 398 12;
#N canvas 216 23 1039 717 server-setup 0;
#X obj 32 60 loadbang;
#X obj 32 110 f;
#X obj 32 159 s \$0-rcv-port;
#X obj 32 216 netreceive -u -b;
#X obj 32 349 oscparse;
#X obj 32 373 list trim;
#X msg 32 183 listen \$1;
#X obj 533 516 netsend -u -b;
#X msg 533 102 connect localhost 12002;
#X obj 545 466 list prepend send;
#X obj 545 489 list trim;
#X obj 545 388 oscformat -f si serialosc list;
#X obj 487 42 r \$0-rcv-port;
#X msg 545 364 list localhost \$1;
#X obj 55 452 s \$0-osc-in;
#X obj 563 412 r \$0-serialosc;
#X floatatom 164 110 5 0 0 0 - - -;
#X obj 545 341 f;
#X obj 573 345 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 460 224 list localhost \$1;
#X obj 460 247 oscformat -f si serialosc notify;
#X obj 460 200 f;
#X obj 478 174 r \$0-rcv-port;
#X obj 460 148 del 10;
#X obj 489 203 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 134 604 spigot 0;
#X obj 198 604 r \$0-is-connected;
#X text 63 414 Send all received messages everywhere they’re needed
internally.;
#X text 715 102 2 Connect to serialosc process.;
#X text 603 173 3 Subscribe to device connect/disconnect notifications.
;
#X text 715 260 4 Request a device listing \, which will trigger the
device matching and connection process., f 40;
#X text 154 216 Patch Server;
#X text 196 574 Restore the symbol used for routing;
#X text 637 516 Send to serialosc;
#X obj 32 302 route 47;
#X obj 32 325 list prepend 47;
#X text 43 264 Only attempt to parse messages which look like valid
OSC (i.e. have a leading / \, which is ASCII 47);
#X text 148 324 Restore the symbol used for routing;
#X obj 32 551 route serialosc;
#X obj 32 574 list prepend serialosc;
#X text 48 495 Send all serialosc messages straight to the [monome]
outlet \, but only forward device messages if this object is currently
connected to a device.;
#X text 30 23 1 Find a free port and set up a local server for this
[monome] object.;
#X obj 32 635 s \$0-osc-out;
#X obj 528 582 r \$0-rcv-port;
#X msg 528 607 localport \$1;
#X obj 528 630 s \$0-status-out;
#X obj 32 86 monome/utils/findport;
#X obj 533 541 s \$0-serialosc-connected-tgl;
#X obj 596 315 r \$0-trigger-device-list;
#X obj 32 135 t f f;
#X obj 487 71 t b f b b;
#X obj 545 315 del 10;
#X connect 0 0 46 0;
#X connect 1 0 16 0;
#X connect 1 0 49 0;
#X connect 3 0 34 0;
#X connect 4 0 5 0;
#X connect 5 0 14 0;
#X connect 5 0 38 0;
#X connect 6 0 3 0;
#X connect 7 0 47 0;
#X connect 8 0 7 0;
#X connect 9 0 10 0;
#X connect 10 0 7 0;
#X connect 11 0 9 0;
#X connect 12 0 50 0;
#X connect 13 0 11 0;
#X connect 15 0 9 0;
#X connect 17 0 13 0;
#X connect 18 0 17 0;
#X connect 19 0 20 0;
#X connect 20 0 9 0;
#X connect 21 0 19 0;
#X connect 22 0 21 1;
#X connect 23 0 21 0;
#X connect 24 0 21 0;
#X connect 25 0 42 0;
#X connect 26 0 25 1;
#X connect 34 0 35 0;
#X connect 35 0 4 0;
#X connect 38 0 39 0;
#X connect 38 1 25 0;
#X connect 39 0 42 0;
#X connect 43 0 44 0;
#X connect 44 0 45 0;
#X connect 46 0 1 0;
#X connect 48 0 17 0;
#X connect 49 0 2 0;
#X connect 49 1 6 0;
#X connect 50 0 51 0;
#X connect 50 1 17 1;
#X connect 50 2 23 0;
#X connect 50 3 8 0;
#X connect 51 0 17 0;
#X restore 317 174 pd server-setup;
#N canvas 255 34 951 710 device-logic 1;
#X obj 384 524 netsend -u -b;
#X obj 384 472 list prepend send;
#X obj 384 495 list trim;
#X obj 384 447 r \$0-osc-dev;
#X obj 38 64 r \$0-osc-in;
#X obj 151 326 del 10;
#X obj 221 359 r \$0-rcv-port;
#X obj 203 383 f;
#X obj 203 408 oscformat sys port;
#X obj 183 492 s \$0-osc-dev;
#X msg 183 297 connect localhost \$1;
#X obj 38 607 unpack s s f;
#N canvas 446 154 653 337 device-query-reply 0;
#X obj 19 16 inlet;
#X text 81 15 We get the ID of the device the parent [monome] object
is managing.;
#X obj 73 51 r [monome]-query-device-managed?;
#X obj 23 283 s [monome]-query-device-managed!;
#X msg 154 115 symbol \$1;
#X obj 73 139 select _____;
#X text 164 138 Placeholder symbol necessary;
#X obj 19 50 t s s;
#X obj 23 187 symbol;
#X symbolatom 19 85 10 0 0 0 - - -;
#X msg 73 115 symbol \$1;
#X obj 23 243 spigot 0;
#X obj 76 218 r \$0-is-connected;
#X text 210 217 Only respond to queries if this [monome] object is
currently connected to a device.;
#X connect 0 0 7 0;
#X connect 0 0 9 0;
#X connect 2 0 10 0;
#X connect 4 0 5 1;
#X connect 5 0 8 0;
#X connect 7 0 4 0;
#X connect 7 1 8 1;
#X connect 8 0 11 0;
#X connect 10 0 5 0;
#X connect 11 0 3 0;
#X connect 12 0 11 1;
#X restore 38 632 pd device-query-reply;
#X obj 70 236 unpack s s f;
#N canvas 335 64 877 613 handle-connect-disconnect 1;
#X obj 16 36 inlet;
#X text 14 12 \$0-osc-in;
#X obj 153 35 inlet;
#X text 150 12 \$0-device-id;
#X obj 16 61 route serialosc;
#X obj 16 87 route add remove;
#X obj 153 79 s \$0-id;
#X obj 492 195 r \$0-id;
#X obj 16 114 t b a;
#X obj 393 114 t b a;
#X obj 425 520 outlet;
#X msg 16 353 list localhost \$1;
#X msg 171 407 list localhost \$1;
#X obj 16 326 f;
#X obj 171 324 f;
#X obj 171 431 oscformat -f si serialosc list;
#X obj 16 376 oscformat -f si serialosc notify;
#X obj 97 522 outlet;
#X text 79 546 \$0-serialosc;
#X text 407 545 to device server;
#X msg 425 351 disconnect;
#X text 441 392 On device connection \, requesting a list of devices
will trigger the connection routine.;
#X symbolatom 211 79 10 0 0 0 - - -;
#X msg 153 57 symbol \$1;
#X obj 425 220 select ___;
#X obj 425 171 unpack s s f;
#X obj 424 137 print Device became unavailable;
#X obj 171 143 print Device became available;
#X obj 471 273 print Disconnecting from device;
#X msg 448 304 0;
#X obj 448 327 s \$0-is-connected;
#X obj 425 249 t b b a;
#X obj 82 280 r \$0-rcv-port;
#X obj 224 175 r \$0-is-connected;
#X obj 224 198 expr 1 - $i1;
#X obj 171 174 t b;
#X obj 171 222 spigot 1;
#X connect 0 0 4 0;
#X connect 2 0 23 0;
#X connect 4 0 5 0;
#X connect 5 0 8 0;
#X connect 5 1 9 0;
#X connect 7 0 24 1;
#X connect 8 0 13 0;
#X connect 8 1 27 0;
#X connect 8 1 35 0;
#X connect 9 0 13 0;
#X connect 9 1 25 0;
#X connect 9 1 26 0;
#X connect 11 0 16 0;
#X connect 12 0 15 0;
#X connect 13 0 11 0;
#X connect 14 0 12 0;
#X connect 15 0 17 0;
#X connect 16 0 17 0;
#X connect 20 0 10 0;
#X connect 23 0 6 0;
#X connect 23 0 22 0;
#X connect 24 0 31 0;
#X connect 25 0 24 0;
#X connect 29 0 30 0;
#X connect 31 0 20 0;
#X connect 31 1 29 0;
#X connect 31 2 28 0;
#X connect 32 0 13 1;
#X connect 32 0 14 1;
#X connect 33 0 34 0;
#X connect 34 0 36 1;
#X connect 35 0 36 0;
#X connect 36 0 14 0;
#X restore 274 122 pd handle-connect-disconnect;
#X obj 467 64 r \$0-rcv-port;
#X obj 70 297 s \$0-device-id;
#X obj 274 145 s \$0-serialosc;
#X symbolatom 70 272 10 0 0 0 - - -;
#X obj 295 64 r \$0-device-id;
#X text 382 546 Netsend to server for connected device.;
#X text 197 605 When we connect to a device \, enable management query
replies to prevent another [monome] object from connecting to the same
device.;
#X text 22 33 Unfiltered messages from serialosc;
#N canvas 519 61 761 633 handle-device-listing 0;
#X obj 30 72 route serialosc;
#X obj 30 112 route device;
#N canvas 474 23 685 636 match-device 0;
#X obj 318 34 inlet compare;
#X obj 35 126 route monome;
#X obj 35 152 route arc;
#X obj 318 90 unpack s f;
#X obj 227 470 spigot 1;
#X obj 296 469 spigot 0;
#X obj 284 445 expr 1 - $f1;
#X obj 284 421 t f f;
#X msg 436 69 grid 64;
#X msg 436 97 arc;
#X msg 436 124 arc 4;
#X msg 444 152 arc 5;
#X msg 436 44 grid 128;
#X msg 436 22 grid;
#X obj 362 64 f 0;
#X obj 318 63 t a b;
#X obj 296 499 route;
#X obj 36 353 spigot 0;
#X obj 124 353 spigot 0;
#X obj 61 255 route arc grid;
#X msg 47 302 1;
#X msg 78 302 0;
#X msg 137 302 1;
#X msg 169 302 0;
#X msg 152 51 monome 128;
#X msg 151 75 monome arc 4;
#X msg 61 229 \$1;
#X obj 261 557 t b;
#X obj 261 588 outlet;
#X text 399 447 Are we looking for a device with a particular number
or not (all?), f 33;
#X msg 436 185 nonsense;
#X msg 435 211;
#X obj 371 369 != 0;
#X obj 327 369 t f f;
#X obj 371 393 f 1;
#X obj 88 447 float;
#X obj 35 20 inlet test_descriptor;
#X obj 88 396 list trim;
#X text 59 206 Are we looking for a grid \, or an arc?;
#X obj 88 422 symbol;
#X connect 0 0 15 0;
#X connect 1 0 2 0;
#X connect 2 0 17 0;
#X connect 2 1 18 0;
#X connect 3 0 26 0;
#X connect 3 1 33 0;
#X connect 4 0 27 0;
#X connect 5 0 16 0;
#X connect 6 0 4 1;
#X connect 7 0 6 0;
#X connect 7 1 5 1;
#X connect 8 0 15 0;
#X connect 9 0 15 0;
#X connect 10 0 15 0;
#X connect 11 0 15 0;
#X connect 12 0 15 0;
#X connect 13 0 15 0;
#X connect 14 0 7 0;
#X connect 15 0 3 0;
#X connect 15 1 14 0;
#X connect 16 0 27 0;
#X connect 17 0 37 0;
#X connect 18 0 37 0;
#X connect 19 0 20 0;
#X connect 19 0 23 0;
#X connect 19 1 21 0;
#X connect 19 1 22 0;
#X connect 19 2 21 0;
#X connect 19 2 23 0;
#X connect 20 0 17 1;
#X connect 21 0 17 1;
#X connect 22 0 18 1;
#X connect 23 0 18 1;
#X connect 24 0 1 0;
#X connect 25 0 1 0;
#X connect 26 0 19 0;
#X connect 27 0 28 0;
#X connect 30 0 15 0;
#X connect 31 0 15 0;
#X connect 32 0 34 0;
#X connect 33 0 16 1;
#X connect 33 1 32 0;
#X connect 34 0 7 0;
#X connect 35 0 4 0;
#X connect 35 0 5 0;
#X connect 36 0 1 0;
#X connect 37 0 39 0;
#X connect 39 0 35 0;
#X restore 70 406 pd match-device;
#X obj 225 36 loadbang;
#X obj 225 107 pack s f;
#X obj 296 83 f \$2;
#X obj 225 83 symbol \$1;
#X obj 225 59 t b b;
#X obj 225 131 list trim;
#X obj 289 37 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 30 340 unpack s s f;
#X obj 30 32 inlet;
#X obj 31 594 outlet;
#X text 256 370 Compensate for pd’s weirdness.;
#X text 254 398 If the device matches \, move on to querying for an
existing [monome] object managing a device with this id.;
#N canvas 73 148 609 416 device-already-managed? 0;
#X obj 22 21 inlet;
#X text 72 12 we get an id \, and output it again if no other [monome]
objects are already managing that device.;
#X obj 74 324 spigot 1;
#X msg 127 300 0;
#X obj 47 371 outlet;
#X obj 114 165 s [monome]-query-device-managed?;
#X obj 127 228 r [monome]-query-device-managed!;
#X obj 74 300 symbol;
#X obj 74 199 del 5;
#X obj 74 134 t b s s s;
#X msg 208 251 symbol \$1;
#X obj 127 275 select _____;
#X text 172 308 Only pay attention to answers to this specific query.
Underscores are placeholder symbol so [select] works.;
#X obj 97 51 inlet;
#X obj 22 97 select _;
#X msg 97 73 symbol \$1;
#X obj 22 324 symbol;
#X obj 22 53 t s s;
#X text 178 70 Ignore queries about the device ID this [monome] object
is already managing \, if any.;
#X text 167 123 Otherwise \, query other [monome] objects to see if
ths device ID is already being managed by one.;
#X text 223 195 Wait 5ms to get an answer;
#X msg 22 74 symbol \$1;
#X connect 0 0 17 0;
#X connect 2 0 4 0;
#X connect 3 0 2 1;
#X connect 6 0 11 0;
#X connect 7 0 2 0;
#X connect 8 0 7 0;
#X connect 9 0 8 0;
#X connect 9 1 7 1;
#X connect 9 2 5 0;
#X connect 9 3 10 0;
#X connect 10 0 11 1;
#X connect 11 0 3 0;
#X connect 13 0 15 0;
#X connect 14 0 16 0;
#X connect 14 1 9 0;
#X connect 15 0 14 1;
#X connect 16 0 4 0;
#X connect 17 0 21 0;
#X connect 17 1 16 1;
#X connect 21 0 14 0;
#X restore 31 538 pd device-already-managed?;
#X obj 31 508 symbol;
#X obj 31 567 pack s s f;
#X obj 168 30 inlet;
#X text 165 6 Current device ID;
#X obj 31 438 unpack s s f;
#X text 256 435 Make sure the id is stored in this symbol object before
matching takes place.;
#X obj 53 199 select s;
#X obj 30 136 t a a a, f 11;
#X obj 53 176 unpack s s f;
#X obj 53 222 t b b;
#X obj 30 314 spigot;
#X msg 85 248 0;
#X msg 106 223 1;
#X text 254 312 Otherwise \, try to match a suitable device based on
the parent construction args e.g. [monome grid 128];
#X text 253 538 Regardless of the method used to discover a matching
device \, check to see if another [monome] object is already managing
it \, and output the device data if this object is free to manage it.
;
#X text 339 83 [monome] construction args inherited from parent define
match parameters.;
#X text 251 173 If the current device’s serial number matches the
parent [monome] object construction arg exactly (e.g. [monome m0000032]
\, then select this device and prevent further matching.;
#X obj 70 371 monome/utils/symboltolist;
#X connect 0 0 1 0;
#X connect 1 0 23 0;
#X connect 2 0 16 0;
#X connect 3 0 7 0;
#X connect 4 0 8 0;
#X connect 5 0 4 1;
#X connect 6 0 4 0;
#X connect 6 0 22 1;
#X connect 7 0 6 0;
#X connect 7 1 5 0;
#X connect 8 0 2 1;
#X connect 9 0 7 0;
#X connect 10 1 33 0;
#X connect 11 0 0 0;
#X connect 15 0 17 0;
#X connect 16 0 15 0;
#X connect 17 0 12 0;
#X connect 18 0 15 1;
#X connect 20 0 16 1;
#X connect 20 1 17 1;
#X connect 20 2 17 2;
#X connect 22 0 25 0;
#X connect 22 1 28 0;
#X connect 23 0 26 0;
#X connect 23 1 24 0;
#X connect 23 2 20 0;
#X connect 24 0 22 0;
#X connect 25 0 16 0;
#X connect 25 1 27 0;
#X connect 26 0 10 0;
#X connect 27 0 26 1;
#X connect 28 0 26 1;
#X connect 33 0 2 0;
#X restore 38 122 pd handle-device-listing \$1 \$2;
#X text 290 32 Current device ID;
#X text 464 32 Patch server port number.;
#X obj 617 71 r \$0-is-connected;
#X obj 617 122 sel 1 0;
#X msg 617 194 connected;
#X msg 694 194 disconnected;
#X obj 617 223 s \$0-status-out;
#X obj 171 433 del 10;
#X obj 171 457 oscformat sys info;
#X obj 151 268 t b f;
#X obj 38 148 t l l;
#X obj 151 350 t b b b;
#X obj 469 288 route sys;
#X text 468 264 Signal device connected when we get a reply to /sys/info
;
#X obj 617 97 change;
#X obj 694 169 del 10;
#X obj 617 169 del 10;
#X obj 527 314 route id port prefix;
#X obj 527 457 s \$0-device-sn-symbol;
#X obj 572 396 s \$0-device-port-number;
#X obj 618 360 s \$0-device-prefix-symbol;
#X obj 676 122 s \$0-device-connected-tgl;
#X msg 706 318 symbol;
#X msg 762 318 0;
#X obj 694 147 t b b;
#X obj 527 434 symbol;
#X obj 618 337 symbol;
#N canvas 307 49 583 403 identify 0;
#X obj 25 335 s \$0-osc-dev;
#X obj 25 130 oscformat monome grid led level all;
#X obj 71 184 until;
#X obj 71 267 pack f f;
#X text 159 100 If it’s a grid \, light/unlight all LEDs;
#X text 165 188 If it’s an arc \, light/unlight all rings;
#X text 24 18 Handle requests to identify a device (only works with
/monome prefix rn), f 72;
#X obj 25 106 * 4;
#X obj 25 51 r \$0-identify-device;
#X obj 71 107 del 1;
#X obj 71 210 f;
#X obj 100 210 + 1;
#X msg 129 210 0;
#X obj 25 74 t f b f b;
#X obj 71 291 oscformat -f ii monome ring all;
#X obj 124 184 * 4;
#X text 160 248 This doesn’t light up ring 0 for some reason?;
#X text 161 266 Sending [0 4< manually does. Weird.;
#X msg 71 161 4;
#X connect 1 0 0 0;
#X connect 2 0 10 0;
#X connect 3 0 14 0;
#X connect 7 0 1 0;
#X connect 8 0 13 0;
#X connect 9 0 18 0;
#X connect 10 0 11 0;
#X connect 10 0 3 0;
#X connect 11 0 10 1;
#X connect 12 0 10 1;
#X connect 13 0 7 0;
#X connect 13 1 9 0;
#X connect 13 2 15 0;
#X connect 13 3 12 0;
#X connect 14 0 0 0;
#X connect 15 0 3 1;
#X connect 18 0 2 0;
#X restore 774 31 pd identify;
#X obj 436 397 s \$0-is-connected;
#X msg 436 374 1;
#X obj 436 351 t b;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 1 0;
#X connect 4 0 23 0;
#X connect 4 0 14 0;
#X connect 4 0 36 0;
#X connect 5 0 35 0;
#X connect 6 0 7 1;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 10 0 0 0;
#X connect 11 0 12 0;
#X connect 13 0 16 0;
#X connect 13 0 18 0;
#X connect 13 2 33 0;
#X connect 14 0 17 0;
#X connect 14 1 0 0;
#X connect 19 0 23 1;
#X connect 19 0 14 1;
#X connect 23 0 34 0;
#X connect 26 0 38 0;
#X connect 27 0 40 0;
#X connect 27 1 48 0;
#X connect 28 0 30 0;
#X connect 29 0 30 0;
#X connect 31 0 32 0;
#X connect 32 0 9 0;
#X connect 33 0 5 0;
#X connect 33 1 10 0;
#X connect 34 0 11 0;
#X connect 34 1 13 0;
#X connect 35 1 31 0;
#X connect 35 2 7 0;
#X connect 36 0 41 0;
#X connect 38 0 27 0;
#X connect 38 0 45 0;
#X connect 39 0 29 0;
#X connect 40 0 28 0;
#X connect 41 0 49 0;
#X connect 41 0 54 0;
#X connect 41 1 43 0;
#X connect 41 2 50 0;
#X connect 46 0 44 0;
#X connect 46 0 42 0;
#X connect 47 0 43 0;
#X connect 48 0 39 0;
#X connect 48 1 46 0;
#X connect 48 1 47 0;
#X connect 49 0 42 0;
#X connect 50 0 44 0;
#X connect 53 0 52 0;
#X connect 54 0 53 0;
#X restore 317 272 pd device-logic;
#X obj 33 161 cnv 15 250 200 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 40 172 inlet;
#X obj 171 171 inlet;
#X obj 40 196 s \$0-osc-dev;
#X obj 171 195 s \$0-serialosc;
#X obj 39 334 outlet;
#X text 315 197 Connects to the serialosc process \, set up a server
for this patch to receive messages \, kick off device listing and connection
process.;
#X text 316 297 Handles all messages from serialosc \, including device
selection and connection in response to device lists \, connect/disconnect
notifications.;
#X text 35 135 Inlets and Outlets;
#X text 314 136 Subpatches;
#X obj 163 335 outlet;
#X obj 39 308 r \$0-osc-out;
#X obj 163 308 r \$0-status-out;
#X text 30 19 [monome] — status:;
#X obj 34 63 tgl 15 0 empty \$0-serialosc-connected-tgl connected_to_serialosc
18 7 0 10 -262144 -1 -1 1 1;
#X obj 34 82 tgl 15 0 empty \$0-device-connected-tgl connected_to_device
18 7 0 10 -262144 -1 -1 0 1;
#X symbolatom 213 79 15 0 0 1 - #0-device-sn-symbol -;
#X symbolatom 349 79 15 0 0 1 - #0-device-prefix-symbol -;
#X text 211 59 Device Serial Num;
#X text 347 59 Device Prefix;
#X floatatom 474 79 10 0 0 0 - #0-device-port-number -;
#X text 592 79 Light up device;
#X obj 213 20 bng 15 250 50 0 \$0-trigger-device-list empty empty 17
7 0 10 -262144 -1 -1;
#X text 233 18 List connected devices;
#X obj 572 81 tgl 15 0 \$0-identify-device empty empty 17 7 0 10 -262144
-1 -1 0 1;
#X text 471 59 Device Out Port;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 13 0 7 0;
#X connect 14 0 12 0;
